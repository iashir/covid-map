{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/covid-app/client/src/App.js\";\nimport React from \"react\";\nimport styles from \"./App.module.css\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport { fetchGlobalData, fetchCountries, fetchHistoricalData } from \"./api/index\";\nimport GoogleMap from \"./components/googleMap/google-map.jsx\";\nimport CardFlag from \"./components/Card/CardFlag\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      historicalData: {},\n      countries: [],\n      country: {\n        lat: 59.95,\n        lng: 30.33\n      }\n    };\n\n    this.handleCountryChange = async country => {\n      const selected = this.state.countries.filter(data => data.country === country);\n\n      if (country === \"global\") {\n        this.componentDidMount();\n      } else {\n        fetchHistoricalData(country).then(({\n          timeline\n        }) => {\n          this.setState({\n            historicalData: {\n              cases: Object.values(timeline.cases),\n              recovered: Object.values(timeline.recovered),\n              deaths: Object.values(timeline.deaths),\n              dates: Object.keys(timeline.cases)\n            }\n          });\n        }).catch(err => {\n          this.setState({\n            historicalData: {}\n          });\n        });\n        this.setState({\n          country: {\n            lat: selected[0].countryInfo.lat,\n            lng: selected[0].countryInfo.long\n          },\n          data: selected[0]\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const data = await fetchGlobalData();\n    const countries = await fetchCountries();\n    const chartData = await fetchHistoricalData(\"all\");\n    console.log(chartData);\n    this.setState({\n      data,\n      countries,\n      historicalData: {\n        cases: Object.values(chartData.cases),\n        recovered: Object.values(chartData.recovered),\n        deaths: Object.values(chartData.deaths),\n        dates: Object.keys(chartData.cases)\n      }\n    });\n  }\n\n  render() {\n    const {\n      data,\n      countries,\n      historicalData,\n      country\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: styles.body,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      zIndex: \"tooltip\",\n      component: Box,\n      className: styles.responsiveCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: styles.responsiveCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardFlag, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Cards, {\n      data: data.cases,\n      todayData: data.todayCases,\n      name: \"Infected\",\n      color: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Cards, {\n      data: data.recovered,\n      todayData: data.todayRecovered,\n      name: \"recovered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Cards, {\n      data: data.deaths,\n      todayData: data.todayDeaths,\n      name: \"deaths\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      zIndex: \"tooltip\",\n      component: Box,\n      className: styles.responsiveChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"stretch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CountryPicker, {\n      countries: countries,\n      handleChange: this.handleCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Chart, {\n      historicalData: historicalData,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      className: styles.responsiveMap,\n      component: Box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMap, {\n      lat: country.lat,\n      lng: country.lng,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/covid-app/client/src/App.js"],"names":["React","styles","Grid","Box","Cards","Chart","CountryPicker","fetchGlobalData","fetchCountries","fetchHistoricalData","GoogleMap","CardFlag","App","Component","state","data","historicalData","countries","country","lat","lng","handleCountryChange","selected","filter","componentDidMount","then","timeline","setState","cases","Object","values","recovered","deaths","dates","keys","catch","err","countryInfo","long","chartData","console","log","render","body","height","width","position","responsiveCard","todayCases","todayRecovered","todayDeaths","responsiveChart","responsiveMap"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./App.module.css\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport {\n  fetchGlobalData,\n  fetchCountries,\n  fetchHistoricalData,\n} from \"./api/index\";\nimport GoogleMap from \"./components/googleMap/google-map.jsx\";\nimport CardFlag from \"./components/Card/CardFlag\";\nclass App extends React.Component {\n  state = {\n    data: {},\n    historicalData: {},\n    countries: [],\n    country: { lat: 59.95, lng: 30.33 },\n  };\n  async componentDidMount() {\n    const data = await fetchGlobalData();\n    const countries = await fetchCountries();\n    const chartData = await fetchHistoricalData(\"all\");\n    console.log(chartData);\n    this.setState({\n      data,\n      countries,\n      historicalData: {\n        cases: Object.values(chartData.cases),\n        recovered: Object.values(chartData.recovered),\n        deaths: Object.values(chartData.deaths),\n        dates: Object.keys(chartData.cases),\n      },\n    });\n  }\n\n  handleCountryChange = async (country) => {\n    const selected = this.state.countries.filter(\n      (data) => data.country === country\n    );\n    if (country === \"global\") {\n      this.componentDidMount();\n    } else {\n      fetchHistoricalData(country)\n        .then(({ timeline }) => {\n          this.setState({\n            historicalData: {\n              cases: Object.values(timeline.cases),\n              recovered: Object.values(timeline.recovered),\n              deaths: Object.values(timeline.deaths),\n              dates: Object.keys(timeline.cases),\n            },\n          });\n        })\n        .catch((err) => {\n          this.setState({ historicalData: {} });\n        });\n      this.setState({\n        country: {\n          lat: selected[0].countryInfo.lat,\n          lng: selected[0].countryInfo.long,\n        },\n        data: selected[0],\n      });\n    }\n  };\n  render() {\n    const { data, countries, historicalData, country } = this.state;\n    return (\n      <Grid\n        container\n        className={styles.body}\n        style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n      >\n        <Grid\n          item\n          xs={12}\n          zIndex=\"tooltip\"\n          component={Box}\n          className={styles.responsiveCard}\n        >\n          <Grid container className={styles.responsiveCard}>\n            <CardFlag data={data}></CardFlag>\n            <Cards\n              data={data.cases}\n              todayData={data.todayCases}\n              name=\"Infected\"\n              color\n            />\n            <Cards\n              data={data.recovered}\n              todayData={data.todayRecovered}\n              name=\"recovered\"\n            />\n            <Cards\n              data={data.deaths}\n              todayData={data.todayDeaths}\n              name=\"deaths\"\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          zIndex=\"tooltip\"\n          component={Box}\n          className={styles.responsiveChart}\n        >\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\n            <CountryPicker\n              countries={countries}\n              handleChange={this.handleCountryChange}\n            />\n            <Chart historicalData={historicalData} data={data} />\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={9}\n          className={styles.responsiveMap}\n          component={Box}\n        >\n          <GoogleMap lat={country.lat} lng={country.lng} />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}